generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String  @id @default(uuid())
  name        String  @db.VarChar(255)
  description String? @db.Text
  price       Decimal @db.Decimal(10, 2)
  sku         String  @unique @db.VarChar(100)
  inStock     Boolean @default(true)
  quantity    Int     @default(0)

  // Dates
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String

  supplier   Supplier? @relation(fields: [supplierId], references: [id])
  supplierId String?

  // Many-to-many relation with orders
  orders OrderItem[]

  // Indexes
  @@index([name])
  @@index([categoryId])
  @@index([supplierId])
}

model Category {
  id       String    @id @default(uuid())
  name     String    @unique @db.VarChar(100)
  products Product[]
}

model Supplier {
  id       String    @id @default(uuid())
  name     String    @db.VarChar(255)
  email    String    @unique
  phone    String?
  products Product[]
}

model Order {
  id        String      @id @default(uuid())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  status    OrderStatus @default(PENDING)
  items     OrderItem[]
}

model OrderItem {
  id       String  @id @default(uuid())
  quantity Int
  price    Decimal @db.Decimal(10, 2)

  order   Order  @relation(fields: [orderId], references: [id])
  orderId String

  product   Product @relation(fields: [productId], references: [id])
  productId String

  @@unique([orderId, productId])
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  role      String   @default("USER")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}
